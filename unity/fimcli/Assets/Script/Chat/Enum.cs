// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: enum.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Forevernine.Midplat.Proto {

  /// <summary>Holder for reflection information generated from enum.proto</summary>
  public static partial class EnumReflection {

    #region Descriptor
    /// <summary>File descriptor for enum.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EnumReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgplbnVtLnByb3RvEhlmb3JldmVybmluZS5taWRwbGF0LnByb3RvKm0KBk9T",
            "VHlwZRIOCgpPU1R5cGVOb25lEAASDQoJT1NUeXBlSU9TEAESEQoNT1NUeXBl",
            "QW5kcm9pZBACEg0KCU9TVHlwZU1hYxADEhEKDU9TVHlwZVdpbmRvd3MQBBIP",
            "CgtPU1R5cGVMaW51eBAFKrsBCgpSZWNvcmRUeXBlEhIKDlJlY29yZFR5cGVO",
            "b25lEAASFQoRUmVjb3JkVHlwZUFwcEluZm8QARIYChRSZWNvcmRUeXBlRGV2",
            "aWNlSW5mbxACEhkKFVJlY29yZFR5cGVSdW50aW1lSW5mbxADEhoKFlJlY29y",
            "ZFR5cGVOZXR3b3JrRXZlbnQQBBIZChVSZWNvcmRUeXBlTmV0d29ya1N0YXQQ",
            "BRIWChJSZWNvcmRUeXBlQXBwRXZlbnQQBiqKAQoSRGV2aWNlVmVyaWZ5UmVz",
            "dWx0EhoKFkRldmljZVZlcmlmeVJlc3VsdE5vbmUQABIZChVEZXZpY2VWZXJp",
            "ZnlSZXN1bHROZXcQARIcChhEZXZpY2VWZXJpZnlSZXN1bHRVcGRhdGUQAhIf",
            "ChJEZXZpY2VWZXJpZnlSZWplY3QQ////////////ASpjCgtOZXR3b3JrVHlw",
            "ZRITCg9OZXR3b3JrVHlwZU5vbmUQABITCg9OZXR3b3JrVHlwZVdpZmkQARIT",
            "Cg9OZXR3b3JrVHlwZVdpcmUQAhIVChFOZXR3b3JrVHlwZU1vYmlsZRADKp8B",
            "ChFOZXR3b3JrRGV0ZWN0RnJlcRIZChVOZXR3b3JrRGV0ZWN0RnJlcU5vbmUQ",
            "ABIZChVOZXR3b3JrRGV0ZWN0RnJlcU9uY2UQARIcChhOZXR3b3JrRGV0ZWN0",
            "RnJlcVN0YXJ0dXAQAhIaChZOZXR3b3JrRGV0ZWN0RnJlcUZvY3VzEAMSGgoW",
            "TmV0d29ya0RldGVjdEZyZXFUaW1lchAEKoICChFOZXR3b3JrRGV0ZWN0VHlw",
            "ZRISCg5EZXRlY3RUeXBlTm9uZRAAEhYKEkRldGVjdFR5cGVJQ01QUGluZxAK",
            "EhgKFERldGVjdFR5cGVUQ1BDb25uZWN0EBQSFQoRRGV0ZWN0VHlwZVRDUERh",
            "dGEQFRIYChREZXRlY3RUeXBlS0NQQ29ubmVjdBAeEhUKEURldGVjdFR5cGVL",
            "Q1BEYXRhEB8SFgoSRGV0ZWN0VHlwZUhUVFBIZWFkECgSFQoRRGV0ZWN0VHlw",
            "ZUhUVFBHZXQQKRIWChJEZXRlY3RUeXBlSFRUUFBvc3QQKhIYChREZXRlY3RU",
            "eXBlRE5TUmVzb2x2ZRAyKnAKDkRhdGFFbmNvZGVUeXBlEhYKEkRhdGFFbmNv",
            "ZGVUeXBlTm9uZRAAEhUKEURhdGFFbmNvZGVUeXBlUmF3EAESGAoURGF0YUVu",
            "Y29kZVR5cGVCYXNlNjQQAhIVChFEYXRhRW5jb2RlVHlwZUhleBADKoEBCgxB",
            "cHBFdmVudFR5cGUSFAoQQXBwRXZlbnRUeXBlTm9uZRAAEhYKEkFwcEV2ZW50",
            "VHlwZU1ldHJpYxABEhUKEUFwcEV2ZW50VHlwZUVycm9yEAISFwoTQXBwRXZl",
            "bnRUeXBlU3VjY2VzcxADEhMKD0FwcEV2ZW50VHlwZVRhZxAEKnkKDE5ldHdv",
            "cmtQcm90bxIUChBOZXR3b3JrUHJvdG9Ob25lEAASEwoPTmV0d29ya1Byb3Rv",
            "VENQEAESEwoPTmV0d29ya1Byb3RvVURQEAISFAoQTmV0d29ya1Byb3RvSFRU",
            "UBADEhMKD05ldHdvcmtQcm90b0tDUBAEKmoKCkZNU19TVEFUVVMSEwoPRk1T",
            "X1NUQVRVU19JTklUEAASFAoQRk1TX1NUQVRVU19WQUxJRBABEhcKE0ZNU19T",
            "VEFUVVNfT1ZFUlJJREUQAhIYChRGTVNfU1RBVFVTX1VOSU5TVEFMTBADKlUK",
            "DUZNU19QVVNIX1RZUEUSFgoSRk1TX1BVU0hfVFlQRV9JTklUEAASFQoRRk1T",
            "X1BVU0hfVFlQRV9GQ00QARIVChFGTVNfUFVTSF9UWVBFX0FQThACKnwKD0ZN",
            "U19UQVNLX1NUQVRVUxIYChRGTVNfVEFTS19TVEFUVVNfTk9ORRAAEhgKFEZN",
            "U19UQVNLX1NUQVRVU19JTklUEAESGwoXRk1TX1RBU0tfU1RBVFVTX1NUQVJU",
            "RUQQAhIYChRGTVNfVEFTS19TVEFUVVNfRE9ORRADKoYBChNGTVNfTVNHX1NF",
            "TkRfUkVTVUxUEhgKFEZNU19NU0dfU0VORF9TVUNDRVNTEAASFQoRRk1TX01T",
            "R19TRU5EX0ZBSUwQARIgChxGTVNfTVNHX1NFTkRfVE9LRU5fTk9UX0ZPVU5E",
            "EAISHAoYRk1TX01TR19TRU5EX1BBUkFNX0VSUk9SEAMq5wEKFUlubmVyU2Vy",
            "dmljZUVycm9yQ29kZRIdChlJbm5lclNlcnZpY2VFcnJvckNvZGVOb25lEAAS",
            "HAoXSW5uZXJTZXJ2aWNlRXJyb3JDb2RlT0sQyAESJAofSW5uZXJTZXJ2aWNl",
            "RXJyb3JDb2RlQmFkUmVxdWVzdBCQAxIjCh5Jbm5lclNlcnZpY2VFcnJvckNv",
            "ZGVGb3JiaWRkZW4QkwMSIgodSW5uZXJTZXJ2aWNlRXJyb3JDb2RlTm90Rm91",
            "bmQQlAMSIgodSW5uZXJTZXJ2aWNlRXJyb3JDb2RlSW50ZXJuYWwQ9AMqTQoK",
            "VXNlckdlbmRlchIVChFVc2VyR2VuZGVyVW5rbm93bhAAEhIKDlVzZXJHZW5k",
            "ZXJNYWxlEAESFAoQVXNlckdlbmRlckZlbWFsZRACKkwKDUNhbmNlbFN1YlR5",
            "cGUSEQoNQ2FuY2VsU3ViSW5pdBAAEhMKD0NhbmNlbFN1YlJldm9rZRABEhMK",
            "D0NhbmNlbFN1YlJlZnVuZBACKpABCg1QdXJjaGFzZVN0YXRlEhUKEVB1cmNo",
            "YXNlU3RhdGVJbml0EAASGgoWUHVyY2hhc2VTdGF0ZVB1cmNoYXNlZBABEhkK",
            "FVB1cmNoYXNlU3RhdGVDYW5jZWxlZBACEhgKFFB1cmNoYXNlU3RhdGVQZW5k",
            "aW5nEAMSFwoTUHVyY2hhc2VTdGF0ZVJlZnVuZBAEKoECCg9BbGlQYXlFcnJv",
            "ckNvZGUSEwoPQWxpUGF5RXJyb3JJbml0EAASFwoSQWxpUGF5RXJyb3JTdWNj",
            "ZXNzEJBOEhgKEkFsaVBheUVycm9yU2VydmljZRCgnAESFQoPQWxpUGF5RXJy",
            "b3JBdXRoEKGcARIeChhBbGlQYXlFcnJvclBhcmFtZXRlck1pc3MQwbgCEiEK",
            "G0FsaVBheUVycm9yUGFyYW1ldGVySW52YWxpZBDCuAISFwoRQWxpUGF5RXJy",
            "b3JEb0ZhaWwQxLgCEhUKD0FsaVBheUNhbGxMaW1pdBDFuAISHAoWQWxpUGF5",
            "RXJyb3JQZXJtaXNzaW9ucxDGuAIq8AEKC0ZCRXJyb3JDb2RlEg0KCUZCRXJy",
            "SW5pdBAAEhUKEEZCRXJyUGVybWlzc2lvbnMQyAESEgoORkJFcnJQYXJhbWV0",
            "ZXIQZBIRCgxGQkVyclNlc3Npb24QywMSEwoPRkJFcnJTZXNzaW9uS2V5EGYS",
            "FAoPRkJFcnJDYW5ub3RDYWxsEPABEg8KCkZCRXJyVG9rZW4QvgESFAoPRkJF",
            "cnJEaXNhbGxvd2VkEPACEhUKEEZCRXJyQWNjZXNzTGV2ZWwQjgISEQoMRkJF",
            "cnJDcmVkaXRzEP8IEhgKE0ZCRXJyVXNlck5vdFZpc2libGUQ0gEq0AIKC0Fw",
            "cGxlU3RhdHVzEhEKDUFwcGxlU3RhdHVzT0sQABIXChFBcHBsZU5vdFVzaW5n",
            "UG9zdBCIpAESKQojQXBwbGVSZWNlaXB0TWFsZm9ybWVkT3JTZXJ2aWNlSXNz",
            "dWUQiqQBEiIKHEFwcGxlUmVjZWlwdE5vdEF1dGhlbnRpY2F0ZWQQi6QBEhkK",
            "E0FwcGxlU2VjcmV0Tm90TWF0Y2gQjKQBEh4KGEFwcGxlU2VydmVyVW5hYmxl",
            "UHJvdmlkZRCNpAESFQoPQXBwbGVTdWJFeHBpcmVkEI6kARIhChtBcHBsZVJl",
            "Y2VpcHRUZXN0MlByb2R1Y3Rpb24Qj6QBEiEKG0FwcGxlUmVjZWlwdFByb2R1",
            "Y3Rpb24yVGVzdBCQpAESEwoNQXBwbGVJbnRlcm5hbBCRpAESGQoTQXBwbGVB",
            "Y2NvdW50RGVsZXRlZBCSpAEqxQEKB1d4RXJyb3ISEAoMV3hFcnJTdWNjZXNz",
            "EAASDgoJV3hFcnJQb3N0EOsHEhQKDld4RXJyQXBwU2VjcmV0EMG4AhIUCg5X",
            "eEVyckdyYW50VHlwZRDCuAISEQoLV3hFcnJPcGVuSUQQw7gCEhAKCld4RXJy",
            "QXBwSUQQzbgCEhYKEFd4RXJyQWNjZXNzVG9rZW4QzrgCEhYKEFd4RXJySW52",
            "YWxpZENvZGUQ3bgCEhcKEVd4RXJyUmVmcmVzaFRva2VuEN64AipiCg5HcmF5",
            "TWV0aG9kVHlwZRISCg5HcmF5TWV0aG9kSW5pdBAAEhMKD0dyYXlNZXRob2RM",
            "b2dpbhABEhEKDUdyYXlNZXRob2RQYXkQAhIUChBHcmF5TWV0aG9kRnJpZW5k",
            "EAMqVQoITVNHX1RZUEUSEQoNTVNHX1RZUEVfSU5JVBAAEhAKDE1TR19UWVBF",
            "X1RYVBABEhAKDE1TR19UWVBFX0lNRxACEhIKDk1TR19UWVBFX1ZPSUNFEAMq",
            "bwoMRk9SV0FSRF9UWVBFEhUKEUZPUldBUkRfVFlQRV9JTklUEAASFQoRRk9S",
            "V0FSRF9UWVBFX1VTRVIQARIVChFGT1JXQVJEX1RZUEVfUk9PTRACEhoKFkZP",
            "UldBUkRfVFlQRV9CUk9BRENBU1QQAyp2Cg1PTkxJTkVfU1RBVFVTEhYKEk9O",
            "TElORV9TVEFUVVNfSU5JVBAAEhgKFE9OTElORV9TVEFUVVNfT05MSU5FEAES",
            "GAoUT05MSU5FX1NUQVRVU19SRVRBSU4QAhIZChVPTkxJTkVfU1RBVFVTX09G",
            "RkxJTkUQAypRCglST09NX1RZUEUSEgoOUk9PTV9UWVBFX0lOSVQQABIXChNS",
            "T09NX1RZUEVfUEVSTUFORU5UEAESFwoTUk9PTV9UWVBFX1RFTVBPUkFSWRAC",
            "KkwKC0ZJTV9WRVJTSU9OEhQKEEZJTV9WRVJTSU9OX0lOSVQQABITCg9GSU1f",
            "VkVSU0lPTl9PTEQQARISCg5GSU1fVkVSU0lPTl9WMhACKjIKB0RCX1RZUEUS",
            "CwoHREJfSU5JVBAAEgwKCERCX01ZU1FMEAESDAoIREJfUkVESVMQAipXCgpE",
            "SVJUWV9UWVBFEg4KCkRJUlRZX0lOSVQQABINCglESVJUWV9VSUMQARITCg9E",
            "SVJUWV9GSUxFX05PREUQAhIVChFESVJUWV9GSUxFX1NUUklORxADKlQKEENv",
            "bnN1bXB0aW9uU3RhdGUSEwoPQ29uc3VtcHRpb25Jbml0EAASEgoOQ29uc3Vt",
            "cHRpb25ZZXQQARIXChNDb25zdW1wdGlvbkNvbnN1bWVkEAIqgAEKDFB1cmNo",
            "YXNlVHlwZRIUChBQdXJjaGFzZVR5cGVJbml0EAASFAoQUHVyY2hhc2VUeXBl",
            "VGVzdBABEhUKEVB1cmNoYXNlVHlwZVByb21vEAISGAoUUHVyY2hhc2VUeXBl",
            "UmV3YXJkZWQQAxITCg9QdXJjaGFzZVR5cGVQcmQQBGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Forevernine.Midplat.Proto.OSType), typeof(global::Forevernine.Midplat.Proto.RecordType), typeof(global::Forevernine.Midplat.Proto.DeviceVerifyResult), typeof(global::Forevernine.Midplat.Proto.NetworkType), typeof(global::Forevernine.Midplat.Proto.NetworkDetectFreq), typeof(global::Forevernine.Midplat.Proto.NetworkDetectType), typeof(global::Forevernine.Midplat.Proto.DataEncodeType), typeof(global::Forevernine.Midplat.Proto.AppEventType), typeof(global::Forevernine.Midplat.Proto.NetworkProto), typeof(global::Forevernine.Midplat.Proto.FMS_STATUS), typeof(global::Forevernine.Midplat.Proto.FMS_PUSH_TYPE), typeof(global::Forevernine.Midplat.Proto.FMS_TASK_STATUS), typeof(global::Forevernine.Midplat.Proto.FMS_MSG_SEND_RESULT), typeof(global::Forevernine.Midplat.Proto.InnerServiceErrorCode), typeof(global::Forevernine.Midplat.Proto.UserGender), typeof(global::Forevernine.Midplat.Proto.CancelSubType), typeof(global::Forevernine.Midplat.Proto.PurchaseState), typeof(global::Forevernine.Midplat.Proto.AliPayErrorCode), typeof(global::Forevernine.Midplat.Proto.FBErrorCode), typeof(global::Forevernine.Midplat.Proto.AppleStatus), typeof(global::Forevernine.Midplat.Proto.WxError), typeof(global::Forevernine.Midplat.Proto.GrayMethodType), typeof(global::Forevernine.Midplat.Proto.MSG_TYPE), typeof(global::Forevernine.Midplat.Proto.FORWARD_TYPE), typeof(global::Forevernine.Midplat.Proto.ONLINE_STATUS), typeof(global::Forevernine.Midplat.Proto.ROOM_TYPE), typeof(global::Forevernine.Midplat.Proto.FIM_VERSION), typeof(global::Forevernine.Midplat.Proto.DB_TYPE), typeof(global::Forevernine.Midplat.Proto.DIRTY_TYPE), typeof(global::Forevernine.Midplat.Proto.ConsumptionState), typeof(global::Forevernine.Midplat.Proto.PurchaseType), }, null, null));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// 设备操作系统类型
  /// </summary>
  public enum OSType {
    [pbr::OriginalName("OSTypeNone")] None = 0,
    [pbr::OriginalName("OSTypeIOS")] Ios = 1,
    [pbr::OriginalName("OSTypeAndroid")] Android = 2,
    [pbr::OriginalName("OSTypeMac")] Mac = 3,
    [pbr::OriginalName("OSTypeWindows")] Windows = 4,
    [pbr::OriginalName("OSTypeLinux")] Linux = 5,
  }

  /// <summary>
  /// 日志记录类型
  /// </summary>
  public enum RecordType {
    [pbr::OriginalName("RecordTypeNone")] None = 0,
    /// <summary>
    /// APP的应用信息
    /// </summary>
    [pbr::OriginalName("RecordTypeAppInfo")] AppInfo = 1,
    /// <summary>
    /// 设备信息
    /// </summary>
    [pbr::OriginalName("RecordTypeDeviceInfo")] DeviceInfo = 2,
    /// <summary>
    /// 运行时状态
    /// </summary>
    [pbr::OriginalName("RecordTypeRuntimeInfo")] RuntimeInfo = 3,
    /// <summary>
    /// 网络活动的日志
    /// </summary>
    [pbr::OriginalName("RecordTypeNetworkEvent")] NetworkEvent = 4,
    /// <summary>
    /// 网络定时统计的日志
    /// </summary>
    [pbr::OriginalName("RecordTypeNetworkStat")] NetworkStat = 5,
    /// <summary>
    /// 事件打点日志
    /// </summary>
    [pbr::OriginalName("RecordTypeAppEvent")] AppEvent = 6,
  }

  /// <summary>
  /// 设备DeviceID检查结果
  /// </summary>
  public enum DeviceVerifyResult {
    [pbr::OriginalName("DeviceVerifyResultNone")] None = 0,
    [pbr::OriginalName("DeviceVerifyResultNew")] New = 1,
    [pbr::OriginalName("DeviceVerifyResultUpdate")] Update = 2,
    [pbr::OriginalName("DeviceVerifyReject")] DeviceVerifyReject = -1,
  }

  /// <summary>
  /// 网络类型
  /// </summary>
  public enum NetworkType {
    [pbr::OriginalName("NetworkTypeNone")] None = 0,
    /// <summary>
    /// Wifi网络
    /// </summary>
    [pbr::OriginalName("NetworkTypeWifi")] Wifi = 1,
    /// <summary>
    /// 有线网络
    /// </summary>
    [pbr::OriginalName("NetworkTypeWire")] Wire = 2,
    /// <summary>
    /// 蜂窝网络
    /// </summary>
    [pbr::OriginalName("NetworkTypeMobile")] Mobile = 3,
  }

  public enum NetworkDetectFreq {
    [pbr::OriginalName("NetworkDetectFreqNone")] None = 0,
    /// <summary>
    /// 终生只探测一次
    /// </summary>
    [pbr::OriginalName("NetworkDetectFreqOnce")] Once = 1,
    /// <summary>
    /// 进程启动探测一次
    /// </summary>
    [pbr::OriginalName("NetworkDetectFreqStartup")] Startup = 2,
    /// <summary>
    /// 切入的时候探测一次
    /// </summary>
    [pbr::OriginalName("NetworkDetectFreqFocus")] Focus = 3,
    /// <summary>
    /// 定时探测
    /// </summary>
    [pbr::OriginalName("NetworkDetectFreqTimer")] Timer = 4,
  }

  /// <summary>
  /// 网络探测类型
  /// </summary>
  public enum NetworkDetectType {
    [pbr::OriginalName("DetectTypeNone")] DetectTypeNone = 0,
    /// <summary>
    /// ICMP ping
    /// </summary>
    [pbr::OriginalName("DetectTypeICMPPing")] DetectTypeIcmpping = 10,
    /// <summary>
    /// TCP connect
    /// </summary>
    [pbr::OriginalName("DetectTypeTCPConnect")] DetectTypeTcpconnect = 20,
    /// <summary>
    /// TCP 发送数据
    /// </summary>
    [pbr::OriginalName("DetectTypeTCPData")] DetectTypeTcpdata = 21,
    /// <summary>
    /// KCP connect
    /// </summary>
    [pbr::OriginalName("DetectTypeKCPConnect")] DetectTypeKcpconnect = 30,
    /// <summary>
    /// KCP 发送数据
    /// </summary>
    [pbr::OriginalName("DetectTypeKCPData")] DetectTypeKcpdata = 31,
    /// <summary>
    /// HTTP 发送Head请求
    /// </summary>
    [pbr::OriginalName("DetectTypeHTTPHead")] DetectTypeHttphead = 40,
    /// <summary>
    /// HTTP 发送Get请求
    /// </summary>
    [pbr::OriginalName("DetectTypeHTTPGet")] DetectTypeHttpget = 41,
    /// <summary>
    /// HTTP 发送Post请求
    /// </summary>
    [pbr::OriginalName("DetectTypeHTTPPost")] DetectTypeHttppost = 42,
    /// <summary>
    /// DNS 解析
    /// </summary>
    [pbr::OriginalName("DetectTypeDNSResolve")] DetectTypeDnsresolve = 50,
  }

  /// <summary>
  /// 数据编码方式
  /// </summary>
  public enum DataEncodeType {
    [pbr::OriginalName("DataEncodeTypeNone")] None = 0,
    /// <summary>
    /// 原始编码
    /// </summary>
    [pbr::OriginalName("DataEncodeTypeRaw")] Raw = 1,
    /// <summary>
    /// Base64编码
    /// </summary>
    [pbr::OriginalName("DataEncodeTypeBase64")] Base64 = 2,
    /// <summary>
    /// 十六进制编码格式
    /// </summary>
    [pbr::OriginalName("DataEncodeTypeHex")] Hex = 3,
  }

  public enum AppEventType {
    [pbr::OriginalName("AppEventTypeNone")] None = 0,
    /// <summary>
    /// Key/Value类型的事件
    /// </summary>
    [pbr::OriginalName("AppEventTypeMetric")] Metric = 1,
    /// <summary>
    /// 异常的事件
    /// </summary>
    [pbr::OriginalName("AppEventTypeError")] Error = 2,
    /// <summary>
    /// 成功的事件
    /// </summary>
    [pbr::OriginalName("AppEventTypeSuccess")] Success = 3,
    /// <summary>
    /// 没有Value类型的Tag，仅仅代表了有一个这种事件点
    /// </summary>
    [pbr::OriginalName("AppEventTypeTag")] Tag = 4,
  }

  public enum NetworkProto {
    [pbr::OriginalName("NetworkProtoNone")] None = 0,
    [pbr::OriginalName("NetworkProtoTCP")] Tcp = 1,
    [pbr::OriginalName("NetworkProtoUDP")] Udp = 2,
    [pbr::OriginalName("NetworkProtoHTTP")] Http = 3,
    [pbr::OriginalName("NetworkProtoKCP")] Kcp = 4,
  }

  /// <summary>
  /// 推送相关的enum
  /// </summary>
  public enum FMS_STATUS {
    [pbr::OriginalName("FMS_STATUS_INIT")] Init = 0,
    [pbr::OriginalName("FMS_STATUS_VALID")] Valid = 1,
    [pbr::OriginalName("FMS_STATUS_OVERRIDE")] Override = 2,
    [pbr::OriginalName("FMS_STATUS_UNINSTALL")] Uninstall = 3,
  }

  public enum FMS_PUSH_TYPE {
    [pbr::OriginalName("FMS_PUSH_TYPE_INIT")] Init = 0,
    [pbr::OriginalName("FMS_PUSH_TYPE_FCM")] Fcm = 1,
    [pbr::OriginalName("FMS_PUSH_TYPE_APN")] Apn = 2,
  }

  public enum FMS_TASK_STATUS {
    [pbr::OriginalName("FMS_TASK_STATUS_NONE")] None = 0,
    [pbr::OriginalName("FMS_TASK_STATUS_INIT")] Init = 1,
    [pbr::OriginalName("FMS_TASK_STATUS_STARTED")] Started = 2,
    [pbr::OriginalName("FMS_TASK_STATUS_DONE")] Done = 3,
  }

  public enum FMS_MSG_SEND_RESULT {
    [pbr::OriginalName("FMS_MSG_SEND_SUCCESS")] FmsMsgSendSuccess = 0,
    [pbr::OriginalName("FMS_MSG_SEND_FAIL")] FmsMsgSendFail = 1,
    [pbr::OriginalName("FMS_MSG_SEND_TOKEN_NOT_FOUND")] FmsMsgSendTokenNotFound = 2,
    [pbr::OriginalName("FMS_MSG_SEND_PARAM_ERROR")] FmsMsgSendParamError = 3,
  }

  public enum InnerServiceErrorCode {
    [pbr::OriginalName("InnerServiceErrorCodeNone")] None = 0,
    [pbr::OriginalName("InnerServiceErrorCodeOK")] Ok = 200,
    [pbr::OriginalName("InnerServiceErrorCodeBadRequest")] BadRequest = 400,
    [pbr::OriginalName("InnerServiceErrorCodeForbidden")] Forbidden = 403,
    [pbr::OriginalName("InnerServiceErrorCodeNotFound")] NotFound = 404,
    [pbr::OriginalName("InnerServiceErrorCodeInternal")] Internal = 500,
  }

  public enum UserGender {
    [pbr::OriginalName("UserGenderUnknown")] Unknown = 0,
    [pbr::OriginalName("UserGenderMale")] Male = 1,
    [pbr::OriginalName("UserGenderFemale")] Female = 2,
  }

  public enum CancelSubType {
    [pbr::OriginalName("CancelSubInit")] CancelSubInit = 0,
    [pbr::OriginalName("CancelSubRevoke")] CancelSubRevoke = 1,
    [pbr::OriginalName("CancelSubRefund")] CancelSubRefund = 2,
  }

  public enum PurchaseState {
    [pbr::OriginalName("PurchaseStateInit")] Init = 0,
    /// <summary>
    ///已支付
    /// </summary>
    [pbr::OriginalName("PurchaseStatePurchased")] Purchased = 1,
    /// <summary>
    ///取消
    /// </summary>
    [pbr::OriginalName("PurchaseStateCanceled")] Canceled = 2,
    /// <summary>
    ///待办
    /// </summary>
    [pbr::OriginalName("PurchaseStatePending")] Pending = 3,
    /// <summary>
    ///退款
    /// </summary>
    [pbr::OriginalName("PurchaseStateRefund")] Refund = 4,
  }

  public enum AliPayErrorCode {
    [pbr::OriginalName("AliPayErrorInit")] AliPayErrorInit = 0,
    /// <summary>
    ///接口调用成功
    /// </summary>
    [pbr::OriginalName("AliPayErrorSuccess")] AliPayErrorSuccess = 10000,
    /// <summary>
    ///服务不可用
    /// </summary>
    [pbr::OriginalName("AliPayErrorService")] AliPayErrorService = 20000,
    /// <summary>
    ///授权权限不足
    /// </summary>
    [pbr::OriginalName("AliPayErrorAuth")] AliPayErrorAuth = 20001,
    /// <summary>
    ///缺少必选参数
    /// </summary>
    [pbr::OriginalName("AliPayErrorParameterMiss")] AliPayErrorParameterMiss = 40001,
    /// <summary>
    ///非法的参数
    /// </summary>
    [pbr::OriginalName("AliPayErrorParameterInvalid")] AliPayErrorParameterInvalid = 40002,
    /// <summary>
    ///业务处理失败
    /// </summary>
    [pbr::OriginalName("AliPayErrorDoFail")] AliPayErrorDoFail = 40004,
    /// <summary>
    ///访问限流
    /// </summary>
    [pbr::OriginalName("AliPayCallLimit")] AliPayCallLimit = 40005,
    /// <summary>
    ///权限不足
    /// </summary>
    [pbr::OriginalName("AliPayErrorPermissions")] AliPayErrorPermissions = 40006,
  }

  public enum FBErrorCode {
    [pbr::OriginalName("FBErrInit")] FberrInit = 0,
    /// <summary>
    ///Permissions error
    /// </summary>
    [pbr::OriginalName("FBErrPermissions")] FberrPermissions = 200,
    /// <summary>
    ///Invalid parameter
    /// </summary>
    [pbr::OriginalName("FBErrParameter")] FberrParameter = 100,
    /// <summary>
    ///The session is invalid because the user has been checkpointed
    /// </summary>
    [pbr::OriginalName("FBErrSession")] FberrSession = 459,
    /// <summary>
    ///Session key invalid or no longer valid
    /// </summary>
    [pbr::OriginalName("FBErrSessionKey")] FberrSessionKey = 102,
    /// <summary>
    ///Desktop applications cannot call this function for other users
    /// </summary>
    [pbr::OriginalName("FBErrCannotCall")] FberrCannotCall = 240,
    /// <summary>
    ///	Invalid OAuth 2.0 Access Token
    /// </summary>
    [pbr::OriginalName("FBErrToken")] FberrToken = 190,
    /// <summary>
    ///	The action attempted has been deemed abusive or is otherwise disallowed
    /// </summary>
    [pbr::OriginalName("FBErrDisallowed")] FberrDisallowed = 368,
    /// <summary>
    ///	This Ads API request is not allowed for apps with development access level (Development access is by default for all apps, please request for upgrade). Make sure that the access token belongs to a user that is both admin of the app and admin of the ad account
    /// </summary>
    [pbr::OriginalName("FBErrAccessLevel")] FberrAccessLevel = 270,
    /// <summary>
    ///This app may not be eligible to accept Facebook Credits. If this app has accepted credits before, please try again.
    /// </summary>
    [pbr::OriginalName("FBErrCredits")] FberrCredits = 1151,
    /// <summary>
    ///User not visible
    /// </summary>
    [pbr::OriginalName("FBErrUserNotVisible")] FberrUserNotVisible = 210,
  }

  public enum AppleStatus {
    [pbr::OriginalName("AppleStatusOK")] Ok = 0,
    /// <summary>
    ///The request to the App Store was not made using the HTTP POST request method.
    /// </summary>
    [pbr::OriginalName("AppleNotUsingPost")] AppleNotUsingPost = 21000,
    /// <summary>
    ///The data in the receipt-data property was malformed or the service experienced a temporary issue. Try again.
    /// </summary>
    [pbr::OriginalName("AppleReceiptMalformedOrServiceIssue")] AppleReceiptMalformedOrServiceIssue = 21002,
    /// <summary>
    ///The receipt could not be authenticated.
    /// </summary>
    [pbr::OriginalName("AppleReceiptNotAuthenticated")] AppleReceiptNotAuthenticated = 21003,
    /// <summary>
    ///The shared secret you provided does not match the shared secret on file for your account.
    /// </summary>
    [pbr::OriginalName("AppleSecretNotMatch")] AppleSecretNotMatch = 21004,
    /// <summary>
    ///The receipt server was temporarily unable to provide the receipt. Try again.
    /// </summary>
    [pbr::OriginalName("AppleServerUnableProvide")] AppleServerUnableProvide = 21005,
    /// <summary>
    ///This receipt is valid but the subscription has expired
    /// </summary>
    [pbr::OriginalName("AppleSubExpired")] AppleSubExpired = 21006,
    /// <summary>
    ///This receipt is from the test environment, but it was sent to the production environment for verification.
    /// </summary>
    [pbr::OriginalName("AppleReceiptTest2Production")] AppleReceiptTest2Production = 21007,
    /// <summary>
    ///This receipt is from the production environment, but it was sent to the test environment for verification.
    /// </summary>
    [pbr::OriginalName("AppleReceiptProduction2Test")] AppleReceiptProduction2Test = 21008,
    /// <summary>
    ///Internal data access error. Try again later.
    /// </summary>
    [pbr::OriginalName("AppleInternal")] AppleInternal = 21009,
    /// <summary>
    ///The user account cannot be found or has been deleted.
    /// </summary>
    [pbr::OriginalName("AppleAccountDeleted")] AppleAccountDeleted = 21010,
  }

  public enum WxError {
    [pbr::OriginalName("WxErrSuccess")] WxErrSuccess = 0,
    /// <summary>
    ///POST参数非法
    /// </summary>
    [pbr::OriginalName("WxErrPost")] WxErrPost = 1003,
    /// <summary>
    ///获取 access_token 时 AppSecret 错误，或者 access_token 无效。请开发者认真比对 AppSecret 的正确性，或查看是否正在为恰当的公众号调用接口
    /// </summary>
    [pbr::OriginalName("WxErrAppSecret")] WxErrAppSecret = 40001,
    /// <summary>
    ///不合法的凭证类型
    /// </summary>
    [pbr::OriginalName("WxErrGrantType")] WxErrGrantType = 40002,
    /// <summary>
    ///不合法的 OpenID ，请开发者确认 OpenID （该用户）是否已关注公众号，或是否是其他公众号的 OpenID
    /// </summary>
    [pbr::OriginalName("WxErrOpenID")] WxErrOpenId = 40003,
    /// <summary>
    ///不合法的appid
    /// </summary>
    [pbr::OriginalName("WxErrAppID")] WxErrAppId = 40013,
    /// <summary>
    ///不合法的 access_token ，请开发者认真比对 access_token 的有效性（如是否过期），或查看是否正在为恰当的公众号调用接口
    /// </summary>
    [pbr::OriginalName("WxErrAccessToken")] WxErrAccessToken = 40014,
    /// <summary>
    ///无效的 oauth_code
    /// </summary>
    [pbr::OriginalName("WxErrInvalidCode")] WxErrInvalidCode = 40029,
    /// <summary>
    ///不合法的 refresh_token
    /// </summary>
    [pbr::OriginalName("WxErrRefreshToken")] WxErrRefreshToken = 40030,
  }

  public enum GrayMethodType {
    [pbr::OriginalName("GrayMethodInit")] GrayMethodInit = 0,
    [pbr::OriginalName("GrayMethodLogin")] GrayMethodLogin = 1,
    [pbr::OriginalName("GrayMethodPay")] GrayMethodPay = 2,
    [pbr::OriginalName("GrayMethodFriend")] GrayMethodFriend = 3,
  }

  public enum MSG_TYPE {
    [pbr::OriginalName("MSG_TYPE_INIT")] Init = 0,
    [pbr::OriginalName("MSG_TYPE_TXT")] Txt = 1,
    [pbr::OriginalName("MSG_TYPE_IMG")] Img = 2,
    [pbr::OriginalName("MSG_TYPE_VOICE")] Voice = 3,
  }

  public enum FORWARD_TYPE {
    [pbr::OriginalName("FORWARD_TYPE_INIT")] Init = 0,
    /// <summary>
    /// one or more users
    /// </summary>
    [pbr::OriginalName("FORWARD_TYPE_USER")] User = 1,
    [pbr::OriginalName("FORWARD_TYPE_ROOM")] Room = 2,
    [pbr::OriginalName("FORWARD_TYPE_BROADCAST")] Broadcast = 3,
  }

  public enum ONLINE_STATUS {
    [pbr::OriginalName("ONLINE_STATUS_INIT")] Init = 0,
    [pbr::OriginalName("ONLINE_STATUS_ONLINE")] Online = 1,
    [pbr::OriginalName("ONLINE_STATUS_RETAIN")] Retain = 2,
    [pbr::OriginalName("ONLINE_STATUS_OFFLINE")] Offline = 3,
  }

  public enum ROOM_TYPE {
    [pbr::OriginalName("ROOM_TYPE_INIT")] Init = 0,
    /// <summary>
    /// 永久的
    /// </summary>
    [pbr::OriginalName("ROOM_TYPE_PERMANENT")] Permanent = 1,
    /// <summary>
    /// 临时的
    /// </summary>
    [pbr::OriginalName("ROOM_TYPE_TEMPORARY")] Temporary = 2,
  }

  public enum FIM_VERSION {
    [pbr::OriginalName("FIM_VERSION_INIT")] Init = 0,
    [pbr::OriginalName("FIM_VERSION_OLD")] Old = 1,
    [pbr::OriginalName("FIM_VERSION_V2")] V2 = 2,
  }

  public enum DB_TYPE {
    [pbr::OriginalName("DB_INIT")] DbInit = 0,
    [pbr::OriginalName("DB_MYSQL")] DbMysql = 1,
    [pbr::OriginalName("DB_REDIS")] DbRedis = 2,
  }

  public enum DIRTY_TYPE {
    [pbr::OriginalName("DIRTY_INIT")] DirtyInit = 0,
    [pbr::OriginalName("DIRTY_UIC")] DirtyUic = 1,
    [pbr::OriginalName("DIRTY_FILE_NODE")] DirtyFileNode = 2,
    [pbr::OriginalName("DIRTY_FILE_STRING")] DirtyFileString = 3,
  }

  public enum ConsumptionState {
    [pbr::OriginalName("ConsumptionInit")] ConsumptionInit = 0,
    /// <summary>
    /// 等待被消费
    /// </summary>
    [pbr::OriginalName("ConsumptionYet")] ConsumptionYet = 1,
    /// <summary>
    /// 已消费掉
    /// </summary>
    [pbr::OriginalName("ConsumptionConsumed")] ConsumptionConsumed = 2,
  }

  public enum PurchaseType {
    [pbr::OriginalName("PurchaseTypeInit")] Init = 0,
    [pbr::OriginalName("PurchaseTypeTest")] Test = 1,
    /// <summary>
    ///促销（即使用促销代码购买）
    /// </summary>
    [pbr::OriginalName("PurchaseTypePromo")] Promo = 2,
    /// <summary>
    ///奖励（即通过观看视频广告而不是付费）
    /// </summary>
    [pbr::OriginalName("PurchaseTypeRewarded")] Rewarded = 3,
    /// <summary>
    ///生产环境
    /// </summary>
    [pbr::OriginalName("PurchaseTypePrd")] Prd = 4,
  }

  #endregion

}

#endregion Designer generated code
