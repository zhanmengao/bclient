// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mid_base_struct.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Forevernine.Midplat.Proto {

  /// <summary>Holder for reflection information generated from mid_base_struct.proto</summary>
  public static partial class MidBaseStructReflection {

    #region Descriptor
    /// <summary>File descriptor for mid_base_struct.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MidBaseStructReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVtaWRfYmFzZV9zdHJ1Y3QucHJvdG8SGWZvcmV2ZXJuaW5lLm1pZHBsYXQu",
            "cHJvdG8aCmVudW0ucHJvdG8i0wEKCkZJTUNoYXRNc2cSMQoEVHlwZRgBIAEo",
            "DjIjLmZvcmV2ZXJuaW5lLm1pZHBsYXQucHJvdG8uTVNHX1RZUEUSNgoFRlR5",
            "cGUYAiABKA4yJy5mb3JldmVybmluZS5taWRwbGF0LnByb3RvLkZPUldBUkRf",
            "VFlQRRIOCgZTcmNVSUQYAyABKAkSDgoGVGFyZ2V0GAQgASgJEg8KB0NvbnRl",
            "bnQYBSABKAwSCwoDRXh0GAYgASgMEhAKCFNlbmRUaW1lGAcgASgDEgoKAklE",
            "GAggASgEYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Forevernine.Midplat.Proto.EnumReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Forevernine.Midplat.Proto.FIMChatMsg), global::Forevernine.Midplat.Proto.FIMChatMsg.Parser, new[]{ "Type", "FType", "SrcUID", "Target", "Content", "Ext", "SendTime", "ID" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FIMChatMsg : pb::IMessage<FIMChatMsg> {
    private static readonly pb::MessageParser<FIMChatMsg> _parser = new pb::MessageParser<FIMChatMsg>(() => new FIMChatMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FIMChatMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Forevernine.Midplat.Proto.MidBaseStructReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FIMChatMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FIMChatMsg(FIMChatMsg other) : this() {
      type_ = other.type_;
      fType_ = other.fType_;
      srcUID_ = other.srcUID_;
      target_ = other.target_;
      content_ = other.content_;
      ext_ = other.ext_;
      sendTime_ = other.sendTime_;
      iD_ = other.iD_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FIMChatMsg Clone() {
      return new FIMChatMsg(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Forevernine.Midplat.Proto.MSG_TYPE type_ = global::Forevernine.Midplat.Proto.MSG_TYPE.Init;
    /// <summary>
    /// @inject_tag: maybe:"1"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Forevernine.Midplat.Proto.MSG_TYPE Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "FType" field.</summary>
    public const int FTypeFieldNumber = 2;
    private global::Forevernine.Midplat.Proto.FORWARD_TYPE fType_ = global::Forevernine.Midplat.Proto.FORWARD_TYPE.Init;
    /// <summary>
    /// @inject_tag: maybe:"1,2"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Forevernine.Midplat.Proto.FORWARD_TYPE FType {
      get { return fType_; }
      set {
        fType_ = value;
      }
    }

    /// <summary>Field number for the "SrcUID" field.</summary>
    public const int SrcUIDFieldNumber = 3;
    private string srcUID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SrcUID {
      get { return srcUID_; }
      set {
        srcUID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Target" field.</summary>
    public const int TargetFieldNumber = 4;
    private string target_ = "";
    /// <summary>
    /// @inject_tag: maybe:"random:0-9999999,1000"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Target {
      get { return target_; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Content" field.</summary>
    public const int ContentFieldNumber = 5;
    private pb::ByteString content_ = pb::ByteString.Empty;
    /// <summary>
    /// @inject_tag: maybe:"hello,ok,world,cs,cpp,golang"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ext" field.</summary>
    public const int ExtFieldNumber = 6;
    private pb::ByteString ext_ = pb::ByteString.Empty;
    /// <summary>
    /// extra infomation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ext {
      get { return ext_; }
      set {
        ext_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SendTime" field.</summary>
    public const int SendTimeFieldNumber = 7;
    private long sendTime_;
    /// <summary>
    /// timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SendTime {
      get { return sendTime_; }
      set {
        sendTime_ = value;
      }
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 8;
    private ulong iD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FIMChatMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FIMChatMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (FType != other.FType) return false;
      if (SrcUID != other.SrcUID) return false;
      if (Target != other.Target) return false;
      if (Content != other.Content) return false;
      if (Ext != other.Ext) return false;
      if (SendTime != other.SendTime) return false;
      if (ID != other.ID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Forevernine.Midplat.Proto.MSG_TYPE.Init) hash ^= Type.GetHashCode();
      if (FType != global::Forevernine.Midplat.Proto.FORWARD_TYPE.Init) hash ^= FType.GetHashCode();
      if (SrcUID.Length != 0) hash ^= SrcUID.GetHashCode();
      if (Target.Length != 0) hash ^= Target.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (Ext.Length != 0) hash ^= Ext.GetHashCode();
      if (SendTime != 0L) hash ^= SendTime.GetHashCode();
      if (ID != 0UL) hash ^= ID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::Forevernine.Midplat.Proto.MSG_TYPE.Init) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (FType != global::Forevernine.Midplat.Proto.FORWARD_TYPE.Init) {
        output.WriteRawTag(16);
        output.WriteEnum((int) FType);
      }
      if (SrcUID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SrcUID);
      }
      if (Target.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Target);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Content);
      }
      if (Ext.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Ext);
      }
      if (SendTime != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(SendTime);
      }
      if (ID != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(ID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Forevernine.Midplat.Proto.MSG_TYPE.Init) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (FType != global::Forevernine.Midplat.Proto.FORWARD_TYPE.Init) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FType);
      }
      if (SrcUID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SrcUID);
      }
      if (Target.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      if (Ext.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ext);
      }
      if (SendTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SendTime);
      }
      if (ID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FIMChatMsg other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Forevernine.Midplat.Proto.MSG_TYPE.Init) {
        Type = other.Type;
      }
      if (other.FType != global::Forevernine.Midplat.Proto.FORWARD_TYPE.Init) {
        FType = other.FType;
      }
      if (other.SrcUID.Length != 0) {
        SrcUID = other.SrcUID;
      }
      if (other.Target.Length != 0) {
        Target = other.Target;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.Ext.Length != 0) {
        Ext = other.Ext;
      }
      if (other.SendTime != 0L) {
        SendTime = other.SendTime;
      }
      if (other.ID != 0UL) {
        ID = other.ID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Forevernine.Midplat.Proto.MSG_TYPE) input.ReadEnum();
            break;
          }
          case 16: {
            FType = (global::Forevernine.Midplat.Proto.FORWARD_TYPE) input.ReadEnum();
            break;
          }
          case 26: {
            SrcUID = input.ReadString();
            break;
          }
          case 34: {
            Target = input.ReadString();
            break;
          }
          case 42: {
            Content = input.ReadBytes();
            break;
          }
          case 50: {
            Ext = input.ReadBytes();
            break;
          }
          case 56: {
            SendTime = input.ReadInt64();
            break;
          }
          case 64: {
            ID = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
